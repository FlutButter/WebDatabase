// <auto-generated />
using System;
using Fishfirm;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fishfirm.Migrations
{
    [DbContext(typeof(FishContext))]
    partial class FishContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FishermanTeam", b =>
                {
                    b.Property<int>("FishermenId")
                        .HasColumnType("int");

                    b.Property<int>("TeamsId")
                        .HasColumnType("int");

                    b.HasKey("FishermenId", "TeamsId");

                    b.HasIndex("TeamsId");

                    b.ToTable("FishermanTeam");
                });

            modelBuilder.Entity("Fishfirm.Boat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateConstruct")
                        .HasColumnType("datetime2");

                    b.Property<int>("Displacement")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Boats");
                });

            modelBuilder.Entity("Fishfirm.Catch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FishId")
                        .HasColumnType("int");

                    b.Property<int>("VisitFishPlaceId")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FishId");

                    b.HasIndex("VisitFishPlaceId");

                    b.ToTable("Catches");
                });

            modelBuilder.Entity("Fishfirm.Fish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kind")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Fish");
                });

            modelBuilder.Entity("Fishfirm.FishPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("FishPlaces");
                });

            modelBuilder.Entity("Fishfirm.Fisherman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Fishermen");
                });

            modelBuilder.Entity("Fishfirm.FishingOut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRelease")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReturn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoatId");

                    b.HasIndex("TeamId");

                    b.ToTable("FishingOuts");
                });

            modelBuilder.Entity("Fishfirm.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Fishfirm.VisitFishPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("FishPlaceId")
                        .HasColumnType("int");

                    b.Property<int>("FishingOutId")
                        .HasColumnType("int");

                    b.Property<int>("Quality")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FishPlaceId");

                    b.HasIndex("FishingOutId");

                    b.ToTable("VisitFishPlaces");
                });

            modelBuilder.Entity("FishermanTeam", b =>
                {
                    b.HasOne("Fishfirm.Fisherman", null)
                        .WithMany()
                        .HasForeignKey("FishermenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fishfirm.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fishfirm.Catch", b =>
                {
                    b.HasOne("Fishfirm.Fish", "Fish")
                        .WithMany("Catches")
                        .HasForeignKey("FishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fishfirm.VisitFishPlace", "VisitFishPlace")
                        .WithMany("Catches")
                        .HasForeignKey("VisitFishPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fish");

                    b.Navigation("VisitFishPlace");
                });

            modelBuilder.Entity("Fishfirm.FishingOut", b =>
                {
                    b.HasOne("Fishfirm.Boat", "Boat")
                        .WithMany("FishingOuts")
                        .HasForeignKey("BoatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fishfirm.Team", "Team")
                        .WithMany("FishingOuts")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boat");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Fishfirm.VisitFishPlace", b =>
                {
                    b.HasOne("Fishfirm.FishPlace", "FishPlace")
                        .WithMany("VisitFishPlaces")
                        .HasForeignKey("FishPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fishfirm.FishingOut", "FishingOut")
                        .WithMany("VisitFishPlaces")
                        .HasForeignKey("FishingOutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FishingOut");

                    b.Navigation("FishPlace");
                });

            modelBuilder.Entity("Fishfirm.Boat", b =>
                {
                    b.Navigation("FishingOuts");
                });

            modelBuilder.Entity("Fishfirm.Fish", b =>
                {
                    b.Navigation("Catches");
                });

            modelBuilder.Entity("Fishfirm.FishPlace", b =>
                {
                    b.Navigation("VisitFishPlaces");
                });

            modelBuilder.Entity("Fishfirm.FishingOut", b =>
                {
                    b.Navigation("VisitFishPlaces");
                });

            modelBuilder.Entity("Fishfirm.Team", b =>
                {
                    b.Navigation("FishingOuts");
                });

            modelBuilder.Entity("Fishfirm.VisitFishPlace", b =>
                {
                    b.Navigation("Catches");
                });
#pragma warning restore 612, 618
        }
    }
}
